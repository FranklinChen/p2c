

{IncludeFrom=misc <p2c/misc.h>}


{*VarStrings=0} {*ExportSymbol=misc_%s}


module misc;    {homeless orphans}

import sysglobals, asm; 

export

const
  
  null  = 0;    nullchar  = chr(0);
                homechar  = chr(1); 
  etx   = 3; 
  bell  = 7;    bellchar  = chr(7); 
  bs    = 8;    leftchar  = chr(8); 
  tab   = 9;    cteol     = chr(9); 
  lf    = 10;   downchar  = chr(10); 
  vt    = 11;   cteos     = chr(11); 
  ff    = 12;   clearscr  = chr(12); 
  cr    = 13;   eol       = chr(13); 
  dle   = 16;     
  esc   = 27;   escchar   = chr(27);
  fsp   = 28;   rightchar = chr(28);
  us    = 31;   upchar    = chr(31); 
  del   = 127;
  cntrl = 255; 

type 
(* CATALOGUE INFORMATION, zero entry refers to the directory itself *)
  
  catentry = record
    cname:  tid;                {name of file or directory}
    ceft:   shortint;           {external file type (LIF)}
    ckind:  filekind;           {file kind}
    cpsize: integer;            {physical size of file 
                                        or of total data space on volume}
    clsize: integer;            {logical size of file 
                                        or unused space on medium}
    cstart: integer;            {starting location of file 
                                        or first possible data location}
    cblocksize: integer;        {size of a sector or block}
    ccreatedate, clastdate:  daterec;   {creation, last modified dates}
    ccreatetime, clasttime:  timerec;   {creation, last modified times}
    cextra1,                    {extension 
                                        or total possible number of files
                                        or requested number of files}
    cextra2:   integer;         {secondary discretionary field
                                        or start index of requested catalog}
    cinfo:  string[20];         {comment or miscellaneous information}
    
    end; 
    
    passentry = record
                 pbits: integer; 
                 pword: passtype; 
                 end; 
    
var
  idle: byte;              { idle character -- 3.0 bug jws 3/20/84 }
  
procedure getioerrmsg(var s :string; lastior : integer);
procedure printerror(errorcode, lastior: integer); 
procedure upc(var s: string); 
function ueovbytes(unit: unitnum): integer;
procedure unblockeddam(anyvar f: fib; unum: unitnum; request: damrequesttype); 
procedure initfilekinds;
procedure lockup; 
procedure lockdown; 
  

end.



